// <auto-generated />
using System;
using DroneComply.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DroneComply.Data.Migrations
{
    [DbContext(typeof(DroneComplyDbContext))]
    partial class DroneComplyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("DroneComply.Core.Models.Aircraft", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CommissionedOn")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastMaintenance")
                        .HasColumnType("TEXT");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<double>("MaxFlightTimeMinutes")
                        .HasColumnType("REAL");

                    b.Property<double>("MaxTakeoffWeightKg")
                        .HasColumnType("REAL");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Aircraft");
                });

            modelBuilder.Entity("DroneComply.Core.Models.ComplianceReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("GeneratedOn")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MissionPlanId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ComplianceReports");
                });

            modelBuilder.Entity("DroneComply.Core.Models.ComplianceViolation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ComplianceReportId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Recommendation")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceReportId");

                    b.ToTable("ComplianceViolations");
                });

            modelBuilder.Entity("DroneComply.Core.Models.FlightDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("FlightLogId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("StoragePath")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FlightLogId");

                    b.ToTable("FlightDocuments");
                });

            modelBuilder.Entity("DroneComply.Core.Models.FlightLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AircraftId")
                        .HasColumnType("TEXT");

                    b.Property<string>("AirspaceClassification")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<double>("DistanceCoveredKm")
                        .HasColumnType("REAL");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FlightDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<string>("MissionSummary")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PilotId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Purpose")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RiskAssessment")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("FlightLogs");
                });

            modelBuilder.Entity("DroneComply.Core.Models.FlightLogEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("FlightLogId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Severity")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FlightLogId");

                    b.ToTable("FlightLogEvents");
                });

            modelBuilder.Entity("DroneComply.Core.Models.MaintenanceRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AircraftId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CompletedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("PerformedBy")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ScheduledDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("MaintenanceRecords");
                });

            modelBuilder.Entity("DroneComply.Core.Models.MaintenanceTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CompletedOn")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("MaintenanceRecordId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MaintenanceRecordId");

                    b.ToTable("MaintenanceTasks");
                });

            modelBuilder.Entity("DroneComply.Core.Models.MissionAirspaceAdvisory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AdvisoryId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("AdvisoryType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EffectiveFrom")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EffectiveTo")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MissionPlanId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Severity")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MissionPlanId");

                    b.ToTable("MissionAirspaceAdvisories");
                });

            modelBuilder.Entity("DroneComply.Core.Models.MissionChecklistItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CompletedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("MissionPlanId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MissionPlanId");

                    b.ToTable("MissionChecklistItems");
                });

            modelBuilder.Entity("DroneComply.Core.Models.MissionPlan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AircraftId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("LandingLocation")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<string>("LaunchLocation")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<string>("MissionObjective")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PilotId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PlannedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("RiskLevel")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("MissionPlans");
                });

            modelBuilder.Entity("DroneComply.Core.Models.Pilot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CertificateNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CertificationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("RecurrentTrainingDue")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Pilots");
                });

            modelBuilder.Entity("DroneComply.Core.Models.Waiver", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ApprovedOn")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("ReferenceNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("SubmittedOn")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Waivers");
                });

            modelBuilder.Entity("DroneComply.Core.Models.WaiverCondition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsSatisfied")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("SatisfiedOn")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("WaiverId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("WaiverId");

                    b.ToTable("WaiverConditions");
                });

            modelBuilder.Entity("DroneComply.Core.Models.WeatherAlert", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Effective")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("TEXT");

                    b.Property<string>("Severity")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("WeatherBriefingId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("WeatherBriefingId");

                    b.ToTable("WeatherAlerts");
                });

            modelBuilder.Entity("DroneComply.Core.Models.WeatherBriefing", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MissionPlanId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RetrievedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MissionPlanId")
                        .IsUnique();

                    b.ToTable("WeatherBriefings");
                });

            modelBuilder.Entity("DroneComply.Core.Models.WeatherCondition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<double>("CeilingFeet")
                        .HasColumnType("REAL");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ObservationTime")
                        .HasColumnType("TEXT");

                    b.Property<double>("TemperatureCelsius")
                        .HasColumnType("REAL");

                    b.Property<double>("VisibilityMiles")
                        .HasColumnType("REAL");

                    b.Property<Guid>("WeatherBriefingId")
                        .HasColumnType("TEXT");

                    b.Property<string>("WeatherPhenomena")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("TEXT");

                    b.Property<int>("WindDirectionDegrees")
                        .HasColumnType("INTEGER");

                    b.Property<double>("WindGustKnots")
                        .HasColumnType("REAL");

                    b.Property<double>("WindSpeedKnots")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("WeatherBriefingId");

                    b.ToTable("WeatherConditions");
                });

            modelBuilder.Entity("DroneComply.Core.Models.Aircraft", b =>
                {
                    b.OwnsMany("DroneComply.Core.Models.AircraftEquipment", "Equipment", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("TEXT");

                            b1.Property<Guid>("AircraftId")
                                .HasColumnType("TEXT");

                            b1.Property<DateTime>("InstalledOn")
                                .HasColumnType("TEXT");

                            b1.Property<DateTime?>("LastServicedOn")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Manufacturer")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("TEXT");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("TEXT");

                            b1.Property<string>("Version")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("TEXT");

                            b1.HasKey("Id");

                            b1.HasIndex("AircraftId");

                            b1.ToTable("AircraftEquipment", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("AircraftId");
                        });

                    b.Navigation("Equipment");
                });

            modelBuilder.Entity("DroneComply.Core.Models.ComplianceViolation", b =>
                {
                    b.HasOne("DroneComply.Core.Models.ComplianceReport", null)
                        .WithMany("Violations")
                        .HasForeignKey("ComplianceReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DroneComply.Core.Models.FlightDocument", b =>
                {
                    b.HasOne("DroneComply.Core.Models.FlightLog", null)
                        .WithMany("Attachments")
                        .HasForeignKey("FlightLogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DroneComply.Core.Models.FlightLogEvent", b =>
                {
                    b.HasOne("DroneComply.Core.Models.FlightLog", null)
                        .WithMany("Events")
                        .HasForeignKey("FlightLogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DroneComply.Core.Models.MaintenanceTask", b =>
                {
                    b.HasOne("DroneComply.Core.Models.MaintenanceRecord", null)
                        .WithMany("Tasks")
                        .HasForeignKey("MaintenanceRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DroneComply.Core.Models.MissionAirspaceAdvisory", b =>
                {
                    b.HasOne("DroneComply.Core.Models.MissionPlan", null)
                        .WithMany("AirspaceAdvisories")
                        .HasForeignKey("MissionPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DroneComply.Core.Models.MissionChecklistItem", b =>
                {
                    b.HasOne("DroneComply.Core.Models.MissionPlan", null)
                        .WithMany("Checklist")
                        .HasForeignKey("MissionPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DroneComply.Core.Models.Pilot", b =>
                {
                    b.OwnsMany("DroneComply.Core.Models.PilotCertification", "Certifications", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Description")
                                .IsRequired()
                                .HasMaxLength(400)
                                .HasColumnType("TEXT");

                            b1.Property<DateTime?>("ExpiresOn")
                                .HasColumnType("TEXT");

                            b1.Property<DateTime>("IssuedOn")
                                .HasColumnType("TEXT");

                            b1.Property<Guid>("PilotId")
                                .HasColumnType("TEXT");

                            b1.Property<int>("Type")
                                .HasColumnType("INTEGER");

                            b1.HasKey("Id");

                            b1.HasIndex("PilotId");

                            b1.ToTable("PilotCertifications", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("PilotId");
                        });

                    b.OwnsMany("DroneComply.Core.Models.PilotCredential", "Credentials", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("TEXT");

                            b1.Property<DateTime?>("ExpiresOn")
                                .HasColumnType("TEXT");

                            b1.Property<DateTime>("IssuedOn")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Issuer")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("TEXT");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("TEXT");

                            b1.Property<Guid>("PilotId")
                                .HasColumnType("TEXT");

                            b1.HasKey("Id");

                            b1.HasIndex("PilotId");

                            b1.ToTable("PilotCredentials", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("PilotId");
                        });

                    b.Navigation("Certifications");

                    b.Navigation("Credentials");
                });

            modelBuilder.Entity("DroneComply.Core.Models.WaiverCondition", b =>
                {
                    b.HasOne("DroneComply.Core.Models.Waiver", null)
                        .WithMany("Conditions")
                        .HasForeignKey("WaiverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DroneComply.Core.Models.WeatherAlert", b =>
                {
                    b.HasOne("DroneComply.Core.Models.WeatherBriefing", null)
                        .WithMany("Alerts")
                        .HasForeignKey("WeatherBriefingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DroneComply.Core.Models.WeatherBriefing", b =>
                {
                    b.HasOne("DroneComply.Core.Models.MissionPlan", null)
                        .WithOne("WeatherBriefing")
                        .HasForeignKey("DroneComply.Core.Models.WeatherBriefing", "MissionPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DroneComply.Core.Models.WeatherCondition", b =>
                {
                    b.HasOne("DroneComply.Core.Models.WeatherBriefing", null)
                        .WithMany("Conditions")
                        .HasForeignKey("WeatherBriefingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DroneComply.Core.Models.ComplianceReport", b =>
                {
                    b.Navigation("Violations");
                });

            modelBuilder.Entity("DroneComply.Core.Models.FlightLog", b =>
                {
                    b.Navigation("Attachments");

                    b.Navigation("Events");
                });

            modelBuilder.Entity("DroneComply.Core.Models.MaintenanceRecord", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("DroneComply.Core.Models.MissionPlan", b =>
                {
                    b.Navigation("AirspaceAdvisories");

                    b.Navigation("Checklist");

                    b.Navigation("WeatherBriefing");
                });

            modelBuilder.Entity("DroneComply.Core.Models.Waiver", b =>
                {
                    b.Navigation("Conditions");
                });

            modelBuilder.Entity("DroneComply.Core.Models.WeatherBriefing", b =>
                {
                    b.Navigation("Alerts");

                    b.Navigation("Conditions");
                });
#pragma warning restore 612, 618
        }
    }
}
